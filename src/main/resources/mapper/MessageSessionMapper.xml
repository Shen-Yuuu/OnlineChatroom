<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.java_chatroom.model.MessageSessionMapper">
    <select id="getSessionIdsByUserId" resultType="java.lang.Integer">
        select sessionId from message_session
        where sessionId in
        (select sessionId from message_session_user where userId = #{userId})
        order by createTime desc
    </select>

    <select id="getFriendsBySessionId" resultType="com.example.java_chatroom.model.Friend">
        select
            u.userId as friendId, u.username as friendName
        from
            message_session_user msu join user u on msu.userId = u.userId
        where
            msu.sessionId = #{sessionId} and msu.userId != #{selfUserId}
    </select>
    
    <insert id="addMessageSession" useGeneratedKeys="true" keyProperty="sessionId">
        insert into message_session (createTime) values(now())
    </insert>

    <insert id="addMessageSessionUser">
        insert into message_session_user(sessionId, userId)
        values(#{sessionId}, #{userId})
    </insert>

    <select id="findSessionByUserIds" resultType="java.lang.Integer">
        select sessionId
        from message_session_user
        where userId in (#{userId1}, #{userId2})
        group by sessionId
        having count(distinct userId) = 2
        limit 1
    </select>
</mapper>
